# ImageStream app-build
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  annotations:
    description: This is the image stream for the app build, this will then get combined with nginx
  labels:
    role: app
  name: app-build

---
# ImageStream app-run
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  annotations:
    description: This is the image stream for the app run
  labels:
    role: app
  name: app-run

---
# BuildConfig app-build
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  annotations:
    description: Compiles the React application for GDX agreements tracker.
  labels:
    role: app
  name: app-build
spec:
  failedBuildsHistoryLimit: 1
  successfulBuildsHistoryLimit: 2
  strategy:
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: gdx-agreements-tracker-node-s2i:latest
      incremental: false
    type: source
  source:
    contextDir: frontend
    dockerfile: ""
    git:
      ref: development
      uri: https://github.com/bcgov/gdx-agreements-tracker.git
    type: Git
  output:
    to:
      kind: ImageStreamTag
      name: gdx-agreements-tracker-app-build:dev
  resources:
    limits:
      cpu: "1"
      memory: 1Gi
    requests:
      cpu: "500m"
      memory: 500Mi
  runPolicy: Serial

---
# BuildConfig app-build
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  annotations:
    description: Compiles the React application for GDX agreements tracker.
  labels:
    role: app
  name: app-run
spec:
  failedBuildsHistoryLimit: 1
  successfulBuildsHistoryLimit: 2
  strategy:
    dockerStrategy:
      from:
        kind: ImageStreamTag
        #name: gdx-agreements-tracker-nginx-s2i:latest
        name: gdx-agreements-tracker-app-build:dev
      incremental: true
    type: Docker
  source:
    dockerfile: |-
      FROM scratch
      # USER root
      # RUN ln -sf /etc/nginx/publicServerEnvironmentSettings.js  /tmp/app/dist/publicServerEnvironmentSettings.js
      # USER 104
      RUN cd /tmp/src && ls -la && npm run build
      CMD  /usr/libexec/s2i/run
    # images:
    # - from:
    #     kind: ImageStreamTag
    #     name: gdx-agreements-tracker-app-build:dev
    #   paths:
    #   - destinationDir: tmp
    #     sourcePath: /tmp/src/build/.
    type: Dockerfile
  output:
    to:
      kind: ImageStreamTag
      name: gdx-agreements-tracker-app-run:dev
  resources:
    limits:
      cpu: "1"
      memory: 1Gi
    requests:
      cpu: "500m"
      memory: 0.5Gi
  runPolicy: Serial